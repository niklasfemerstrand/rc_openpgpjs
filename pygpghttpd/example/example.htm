<!doctype html>
<!--
  This example file demonstrates how to call pygpghttpd with JavaScript.
  For full API documentation please visit: https://github.com/qnrq/pygpghttpd/blob/master/DOCS/API.txt
-->
	<head>
		<title>pygpghttpd test suite</title>
	</head>
	<body>
		<h1>pygpghttpd test suite</h1>
		<div id="status"></div>
		<hr />
		<div id="tests" style="display:none;">
			<h2>Key generation</h2>
			<strong>Algo:</strong>
			<select id="type"><option value="RSA">RSA</option><option value="DSA">DSA</option></select>
			<strong>Length:</strong>
			<select id="length"><option value="2048">2048</option><option value="4096">4096</option></select>
			<strong>Name:</strong> <input type="text" id="name" value="Alice" />
			<strong>Email:</strong> <input type="text" id="email" value="alice@foo.com" />
			<strong>Passphrase:</strong> <input type="text" id="passphrase" value="alice<3bob" />
			<input type="button" id="keygen" value="Generate" onclick="keygen($('#type').val(), $('#length').val(), $('#name').val(), $('#email').val(), $('#passphrase').val());" />
			<p id="generating" style="display:none;color:red;">Generating, please wait...</div>

			<hr />
			<h2>Pubkeys</h2>
			<table id="pubkeys" style="border-collapse: collapse" border="1" cellpadding="3">
				<thead><th>Keyid</th><th>Fingerprint</th><th>Algo</th><th>Length</th><th>Identities</th><th>Delete</th><th></th></thead>
			</table>

			<hr />
			<h2>Privkeys</h2>
			<table id="privkeys" style="border-collapse: collapse" border="1" cellpadding="3">
				<thead><th>Keyid</th><th>Fingerprint</th><th>Algo</th><th>Length</th><th>Identities</th><th>Delete</th></thead>
			</table>

			<hr />
			<h2>Encrypt</h2>
			Cleartext:<br />
			<textarea rows="10" cols="80" id="encrypt_data">Secrets</textarea>
			<br />
			<fieldset style="width: 400px">
				<legend> Signature options </legend>
				<label><input type="checkbox" id="encrypt_sign" value="1" /> sign message</label>
				<br />
				Passphrase for signing:<br />
				<input type="text" id="encrypt_sign_passphrase" />
				<br />
				Private key for signing:<br />
				<select id="encrypt_sign_privkey"></select>
			</fieldset>
			<br />
			Recipient email address(es):<br />
			<input type="text" id="encrypt_recipient" />
			<br />
			<input type="button" value="Encrypt" onclick="encrypt();" />

			<hr />
			<h2>Decrypt</h2>
			Ciphertext:<br />
			<textarea rows="10" cols="80" id="decrypt_data"></textarea>
			<br />
			Passphrase:<br />
			<input type="text" id="decrypt_passphrase" />
			<br />
			<input type="button" value="Decrypt" onclick="decrypt();" />

			<hr />
			<h2>Sign</h2>
			Message text:<br />
			<textarea rows="10" cols="80" id="sign_data">setec astronomy</textarea>
			<br />
			Passphrase:<br />
			<input type="text" id="sign_passphrase" />
			<br />
			Private key:<br />
			<select id="sign_privkey"></select>
			<br />
			<input type="button" value="Sign" onclick="sign();" />

			<hr />
			<h2>Verify clear text</h2>
			Message text:<br />
			<textarea rows="10" cols="80" id="verify_data"></textarea>
			<br />
			<input type="button" value="Verify" onclick="verify();" />
		</div>
		<script src="./js/jquery-1.10.2.min.js"></script>
		<script>
			$("#status").html("Connecting to pygpghttpd");
			$.post("https://localhost:11337/", function() {
				$("#status").append(": success!");
				$("#tests").show();
			}).fail(function() {
				$("#status").append(": fail! Make sure you imported the pypghttpd SSL certificate into your browser.");
			});

			function keygen(type, length, name, email, passphrase) {
				try {
					$("#keygen").toggle();
					$("#generating").toggle();
				} catch(e) {
					alert(e);
				}

				$.post("https://localhost:11337/", {
					cmd: "keygen",
					type: type,
					length: length,
					name: name,
					email: email,
					passphrase: passphrase
				}, function(data) {
					try {
						$("#keygen").toggle();
						$("#generating").toggle();
					} catch(e) {
						alert(e);
					}

					keylist();
					keylist(true);
				});

				return true;
			}

			function keydel(fingerprint, private) {
				if(typeof(private) == "undefined") {
					private = false;
				}

				$.post("https://localhost:11337", {
					cmd: "keydel",
					fingerprint: fingerprint,
					private: private
				}, function(data) {
					if(data != "ok") {
						alert(data);
					}

					try {
						keylist();
						keylist(true);
					} catch(e) {
						alert(e);
					}
				});
				return true;
			}

			function keylist(private) {
				if(typeof(private) == "undefined") {
					private = false;
				}

				$.post("https://localhost:11337/", {
					cmd: "keylist",
					private: private
				}, function(data) {
					obj = JSON.parse(data);
					if(private) {
						$("#privkeys tbody").empty();
						$("#sign_privkey").empty();
						$("#encrypt_sign_privkey").empty();
					} else {
						$("#pubkeys tbody").empty();
					}

					for(var o in obj) {
						algo = escapeHtml(obj[o].algo);
						fingerprint = escapeHtml(obj[o].fingerprint);
						fingerprintHtml = fingerprint.fixed();
						keyid = escapeHtml(obj[o].keyid);
						keyidHtml = keyid.substr(0, 8).fixed() + keyid.substr(8, 8).bold().fixed();
						length = escapeHtml(obj[o].length);
						identities = escapeHtml(obj[o].uids.join(', '));
						if(private) {
							$("#privkeys").append("<tr><td>" + keyidHtml + "</td>" + "<td>" +fingerprintHtml + "</td><td>" + algo + "</td><td>" + length + "</td><td>" + identities + "</td><td><a href='#' onclick='keydel(\"" + fingerprint + "\", true);'>X</a></td></tr>");
							$("<option>").text(keyid).appendTo("#sign_privkey");
							$("<option>").text(keyid).appendTo("#encrypt_sign_privkey");
						} else {
							$("#pubkeys").append("<tr><td>" + keyidHtml + "</td><td>" + fingerprintHtml + "</td><td>" + algo + "</td><td>" + length + "</td><td>" + identities + "</td><td><a href='#' onclick='keydel(\"" + fingerprint + "\");'>X</a></td><td><a href=\"#\" onclick=\"exportPubkey('" + keyid + "')\">Export</a></td></tr>");
						}
					}
					return true;
				} );
			}

			function exportPubkey(id) {
				$.post("https://localhost:11337", {
					cmd: "keyexport",
					id: id
				}, function(data) {
					alert(data);
				});
			}

			function encrypt() {
				$.post("https://localhost:11337", {
					cmd: "encrypt",
					data: $("#encrypt_data").val(),
					sign: $("#encrypt_sign").is(":checked") ? $("#encrypt_sign_privkey").find(":selected").text() : "",
					passphrase: $("#encrypt_sign_passphrase").val(),
					recipients: $("#encrypt_recipient").val()
				}, function(data) {
					$("#decrypt_data").val(data);
				});
			}

			function decrypt() {
				$.post("https://localhost:11337", {
					cmd: "decrypt",
					data: $("#decrypt_data").val(),
					passphrase: $("#decrypt_passphrase").val()
				}, function(data) {
					alert(data);
				});
			}

			function sign() {
				$.post("https://localhost:11337", {
					cmd: "sign",
					data: $("#sign_data").val(),
					passphrase: $("#sign_passphrase").val(),
					keyid: $("#sign_privkey").find(":selected").text()
				}, function(data) {
					$("#verify_data").val(data);
				});
			}

			function verify() {
				$.post("https://localhost:11337", {
					cmd: "verify",
					data: $("#verify_data").val(),
				}, function(data) {
					alert(data === "True" ? "Signature ok" : "Signature verification failed!");
				});
			}

			function escapeHtml(unsafe) {
				return unsafe.replace(/&/g, "&amp;")
				             .replace(/</g, "&lt;")
				             .replace(/>/g, "&gt;")
				             .replace(/"/g, "&quot;")
				             .replace(/'/g, "&#039;");
			}

			keylist();
			keylist(true);
		</script>
	</body>
</html>
